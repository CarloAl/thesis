//var distance = require('./distance'); doesn't work

//import("./distance.js");
/*
define Element {
	destination: '',
	time: '',
	radius: '',
    person: '',
    maxPrice: '',
    long: '',
    lat: '',
    username: '',
    userId: '',
    matched: false
}*/

define Taxi {
	destination: '',
	time: '',
	radius: '',
    person: '',
    maxPrice: '',
    long: '',
    lat: '',
    username: '',
    userId: '',
    ws : '',
    phone: '',
    matched: false
}


define Passenger {
	destination: '',
	time: '',
	radius: '',
    person: '',
    maxPrice: '',
    long: '',
    lat: '',
    username: '',
    userId: '',
    ws : '',
    phone: '',
    matched: false
}

//parser error test();

function getDistanceFromLatLonInKm(lat1,lon1,lat2,lon2) {
  if(lat1===lat2 && lon1===lon2){
   return 0
  }else{
     var R = 6371; // Radius of the earth in km
     var dLat = deg2rad(lat2-lat1);  // deg2rad below
     var dLon = deg2rad(lon2-lon1); 
     var a = 
       Math.sin(dLat/2) * Math.sin(dLat/2) +
       Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * 
       Math.sin(dLon/2) * Math.sin(dLon/2)
       ; 
     var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); 
     var d = R * c; // Distance in km
     return d;
  }
}

function deg2rad(deg) {
  return deg * (Math.PI/180)
}

//when u write an if else u need always the {} or the parser gets an error

//if u don't want to get a error from the parse u have to declare the variable.


function checkDistance(lat1,lon1,lat2,lon2,radius1,radius2){
  //var radius = radius1<radius2?radius1:radius2;
  var radius = Math.min(radius2,radius1);
  
  if(getDistanceFromLatLonInKm(lat1,lon1,lat2,lon2) <= radius){
    return true
  }else{
  	return false;
  }
}

/*
function test(e){
	console.log(e.destination);
	return true;
}

rule test {
	when{
		e : Element test(e);
	}then{
		console.log("teste");
	}
}*/

/*&& dateCmp(p.time , t.time) < 0 && p.person <= t.person
		    && checkDistance(t.lat, t.long, p.lat,p.long,Math.min(p.radius,t.radius)) 
		    && p.price <= t.price ;*/

rule matching{
	when{
		t : Taxi;
		p : Passenger p.destination == t.destination && dateCmp(p.time ,t.time) < 0  && p.person <= t.person
		&& checkDistance(t.lat, t.long, p.lat,p.long,p.radius, t.radius) && p.maxPrice <= t.maxPrice; 
	}then{
		console.log("match!");		
		modify(t,function(){
			if(t.person > p.person){
				t.person = t.person - p.person;
			}
		});
		matchFound(t,p);
		if(t.person = p.person){
			retract(t);
		}
		flow.retract(p);
	}
}

//the retract of the passenger won't intefer with the modify (where we use p again), he does the same on the examples
		//and probably it is because the retract still remove the fact from the working memory, but I still have a referencence to it
		//from the lhs


//if I emit and event I cannot pass parameter (the taxi and the passenger), and the listener is on the js side
//remove retweet, no need
//throw jsonmongodb
//emit event for update seats
//compare ugly js and nools

/*

rule Rule2{
	when{
		e1 : Element e1.destination != null; //for further reuse but seems to work without it {destination : dest1 };
		e2 : Element e2.destination == e1.destination && e2 != e1;
	}then{
		modify(e1,function(){
			console.log(e1.destination);
			debugger;
			e1.destination = null;
			console.log("\n dest:" + e1.destination);
		});
	}
}*/
